定义一个函数要使用def语句

函数的返回值用return语句返回，

如果没有return语句，函数执行完毕后也会返回结果，
只是结果为None，return None可以简写为return


def method(x):
    if x >= 0:
        return x
    else:
        return -x
		
		
在Python交互环境中定义函数时，注意Python会出现...的提示。函数定义结束后需要按两次回车重新回到>>>提示符下

如果你已经把method()的函数定义保存为mymethod.py文件了，
那么，可以在该文件的当前目录下启动Python解释器，
用from mymethod import method来导入method()函数，注意mymethod是文件名（不含.py扩展名）

pass语句相当于是占位符
因为代码块是缩进 不像java那样


-------------------------------------------

返回多个值

函数可以返回多个值吗？答案是肯定的。

比如在游戏中经常需要从一个点移动到另一个点，给出坐标、位移和角度，就可以计算出新的新的坐标：
---
import math

def move(x, y, step, angle=0):
    nx = x + step * math.cos(angle)
    ny = y - step * math.sin(angle)
    return nx, ny
---
import math语句表示导入math包，并允许后续代码引用math包里的sin、cos等函数。

------
然后，我们就可以同时获得返回值：

>>> x, y = move(100, 100, 60, math.pi / 6)
>>> print(x, y)
151.96152422706632 70.0
但其实这只是一种假象，Python函数返回的仍然是单一值：

>>> r = move(100, 100, 60, math.pi / 6)
>>> print(r)
(151.96152422706632, 70.0)
原来返回值是一个tuple！但是，在语法上，返回一个tuple可以省略括号，而多个变量可以同时接收一个tuple，按位置赋给对应的值，所以，Python的函数返回多值其实就是返回一个tuple，但写起来更方便。
