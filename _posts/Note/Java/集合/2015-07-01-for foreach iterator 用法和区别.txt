相同点：   三个都可以用来遍历数组和集合
不同点：1.形式差别 
                 for的形式是
                for（int i=0;i<arr.size();i++）{...}

                  foreach的形式是
                for（int　i：arr）{...}

                  iterator的形式是
               Iterator it = arr.iterator();
               while(it.hasNext()){ object o =it.next(); ...}


                 2.条件差别
                   for需要知道集合或数组的大小，而且需要是有序的，不然无法遍历；
                   foreach和iterator都不需要知道集合或数组的大小，他们都是得到集合内的每个元素然后进行处理；
              
                 3.多态差别
                 for和foreach都需要先知道集合的类型，甚至是集合内元素的类型，即需要访问内部的成员，不能实现态；
                   iterator是一个接口类型，他不关心集合或者数组的类型，而且他还能随时修改和删除集合的元素，举个例                     子：public void display（Iterator<object> it）{
                                     while(it.hasNext()){
                                          system.out.print(it.next()+"");
                                     }
                                }           
                             当我们需要遍历不同的集合时，我们只需要传递集合的iterator（如arr.iterator()）看懂了吧，这就                         是iterator的好处，他不包含任何有关他所遍历的序列的类型信息，能够将遍历序列的操作与序列底层的                       结构分离。迭代器统一了对容器的访问方式。这也是接口的解耦的最好体现。


                    4.用法差别
                       for循环一般用来处理比较简单的有序的，可预知大小的集合或数组
                       foreach可用于遍历任何集合或数组，而且操作简单易懂，他唯一的不好就是需要了解集合内部类型
                       iterator是最强大的，他可以随时修改或者删除集合内部的元素，并且是在不需要知道元素和集合的类   型的情况下进行的（原因可参考第三点：多态差别），当你需要对不同的容器实现同样的遍历方式时，迭代器是最好的选择！
