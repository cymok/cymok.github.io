什么是适配器
-->
在使用监听器的时候,需要定义一个类事件监听器接口
通常接口中有多个方法,而程序中不一定所有方法都用到,但又必须重新,这很繁琐
适配器简化了这些操作,我们定义监听器的时候只要继承适配器,然后重新需要的方法即可

适配器原理
-->
适配器就是一个类,实现了监听器接口,所有抽象方法都重新了,但是方法都是空的
适配器类需要定义成抽象类,因为创建该类对象,动用空方法是没有意义的
目的就是为了简化程序员的操作,定义监听器时继承适配器,只重新需要的方法即可

-------------------

简而言之

一个接口中有多个方法,实现时就需要所有方法都实现
用适配器模式的话,适配器类实现接口,但方法都是空实现
到真正用接口的时候,使用处只需要使用适配器类,就可以只重写需要的那些方法了
